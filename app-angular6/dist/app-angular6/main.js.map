{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/api.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/movie-detail/movie-detail.component.css","webpack:///./src/app/movie-detail/movie-detail.component.html","webpack:///./src/app/movie-detail/movie-detail.component.ts","webpack:///./src/app/movie/movie.component.css","webpack:///./src/app/movie/movie.component.html","webpack:///./src/app/movie/movie.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nconst httpOptions = {\n\theaders: new HttpHeaders({'Content-Type': 'application/json'})\n};\nconst apiUrl = \"/api\";\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ApiService {\n\n\tconstructor(private http: HttpClient) { }\n\tprivate handleError(error: HttpErrorResponse){\n\t\tif(error.error instanceof ErrorEvent){\n\t\t\tconsole.error('An error occurred:',error.error.message);\n\t\t}else{\n\t\t\tconsole.error(\n\t\t\t\t`Backend returned code ${error.status},` +\n\t\t\t\t`body was: ${error.error}`);\n\t\t}\n\t\treturn throwError('Something bad happened; please try again later.');\n\t};\n\n\tprivate extractData(res: Response){\n\t\tlet body = res;\n\t\treturn body || { };\n\t}\n\n\tgetMovies(): Observable<any>{\n\t\treturn this.http.get(apiUrl, httpOptions).pipe(\n\t\t\tmap(this.extractData),\n\t\t\tcatchError(this.handleError));\n\t}\n\n\tgetMovie(id: string): Observable<any> {\n\t\tconst url = `${apiUrl}/${id}`;\n\t\treturn this.http.get(url, httpOptions).pipe(\n\t\t\tmap(this.extractData),\n\t\t\tcatchError(this.handleError));\n\t}\n\n}\n\n\n","module.exports = \".example-card {\\r\\n  max-width: 500px;\\r\\n}\\r\\n\\r\\n.button-row {\\r\\n  margin: 10px 0;\\r\\n}\"","module.exports = \"\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app-angular6';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes} from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { MovieComponent } from './movie/movie.component';\nimport { MovieDetailComponent } from './movie-detail/movie-detail.component';\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport {\n  MatInputModule,\n  MatPaginatorModule,\n  MatProgressSpinnerModule,\n  MatSortModule,\n  MatTableModule,\n  MatIconModule,\n  MatButtonModule,\n  MatCardModule,\n  MatFormFieldModule } from \"@angular/material\";\n\nconst appRoutes: Routes = [\n{\n  path: '',\n  redirectTo: 'movies',\n  pathMatch: 'full'\n},\n{\n  path: 'movies',\n  component: MovieComponent,\n  data: {title: 'Movie List'}\n},\n{\n  path: 'movies/movie-details/:id',\n  component: MovieDetailComponent,\n  data: {title: 'Movie Details'}\n}\n];\n\n\n \n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MovieComponent,\n    MovieDetailComponent\n  ],\n  imports: [\n    RouterModule.forRoot(appRoutes,{enableTracing: true}),\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    MatInputModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatProgressSpinnerModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\nexport const routingComponents = [MovieComponent, MovieDetailComponent];\n","module.exports = \"\"","module.exports = \"<div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/movies']\\\"><mat-icon>list</mat-icon></a>\\n</div>\\n<mat-card class=\\\"example-card\\\">\\n  <mat-card-header>\\n    <mat-card-title><h2>{{movie.title}}</h2></mat-card-title>\\n    <mat-card-subtitle>{{movie.description}}</mat-card-subtitle>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <dl>\\n      <dt>Duration:</dt>\\n      <dd>{{movie.duration}}</dd>\\n      <dt>Rating:</dt>\\n      <dd>{{movie.rating}}</dd>\\n      <dt>Description:</dt>\\n      <dd>{{movie.description}}</dd>\\n      <dt>Year:</dt>\\n      <dd>{{movie.year}}</dd>\\n    </dl>\\n  </mat-card-content>\\n  <mat-card-actions>\\n   \\n  </mat-card-actions>\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-movie-detail',\n  templateUrl: './movie-detail.component.html',\n  styleUrls: ['./movie-detail.component.css']\n})\nexport class MovieDetailComponent implements OnInit {\n\tmovie = {};\n  constructor(private route: ActivatedRoute, private api: ApiService) { }\n\n  ngOnInit() {\n  \tthis.getMovieDetails(this.route.snapshot.params['id']);\n  }\n\n  getMovieDetails(id){\n  \tthis.api.getMovie(id).subscribe(data =>\n  \t\t{\n  \t\t\tconsole.log(data);\n  \t\t\tthis.movie = data;\n  \t\t}\n  \t);\n  }\n\n}\n","module.exports = \".example-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  max-height: 500px;\\r\\n  min-width: 300px;\\r\\n  overflow: auto;\\r\\n}\\r\\n\\r\\n.year-col {\\r\\n  flex: 0 0 100px !important;\\r\\n  white-space: unset !important;\\r\\n}\\r\\n\\r\\n.button-row {\\r\\n  margin: 10px 0;\\r\\n}\"","module.exports = \"\\n<div class=\\\"example-container mat-elevation-z8\\\">\\n  <table mat-table #table [dataSource]=\\\"dataSource\\\">\\n\\n    <!--- Note that these columns can be defined in any order.\\n          The actual rendered columns are set as a property on the row definition\\\" -->\\n\\n    <!-- Year Column -->\\n    <ng-container matColumnDef=\\\"year\\\">\\n      <th mat-header-cell *matHeaderCellDef> Year </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"year-col\\\"> {{element.year}} </td>\\n    </ng-container>\\n\\n    <!-- Title Column -->\\n    <ng-container matColumnDef=\\\"title\\\">\\n      <th mat-header-cell *matHeaderCellDef> Title </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.title}} </td>\\n    </ng-container>\\n\\n    <!-- Description Column -->\\n    <ng-container matColumnDef=\\\"description\\\">\\n      <th mat-header-cell *matHeaderCellDef> Description </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.description}} </td>\\n    </ng-container>\\n\\n     <!-- Thumb Column -->\\n    <ng-container matColumnDef=\\\"thumb\\\">\\n      <th mat-header-cell *matHeaderCellDef> Thumbnail </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.thumb}} </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"['movie-details',row._id]\\\"></tr>\\n  </table>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { DataSource } from '@angular/cdk/collections';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-movie',\n  templateUrl: './movie.component.html',\n  styleUrls: ['./movie.component.css']\n})\nexport class MovieComponent implements OnInit {\n\tmovies:any;\n  displayedColumns = ['year', 'title', 'description','thumb'];\n  dataSource = new MovieDataSource(this.api);\n  constructor(private api: ApiService) { }\n\n  ngOnInit() {\n  \tthis.api.getMovies()\n  \t\t.subscribe(res => {\n  \t\t\tconsole.log(res);\n  \t\t\tthis.movies = res;\n\n  \t\t}, err => {\n  \t\t\tconsole.log(err);\n  \t\t});\n  }\n\n}\n\nexport class MovieDataSource extends DataSource<any> {\n  constructor(private api: ApiService) {\n    super()\n  }\n\n  connect() {\n    return this.api.getMovies();\n  }\n\n  disconnect() {\n\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}